name: Promote Python Package

on:
  push:
    branches:
      - main

env:
  CLOUDSMITH_NAMESPACE: "interview-prashant-lahare"  # Replace with the actual namespace
  CLOUDSMITH_STAGING_REPO: "staging"
  CLOUDSMITH_PRODUCTION_REPO: "production"
  CLOUDSMITH_SERVICE_SLUG: ${{ vars.CLOUDSMITH_SERVICE_SLUG }}
  PACKAGE_NAME: "python-package"
  CLOUDSMITH_API_KEY: ${{ secrets.CLOUDSMITH_API_KEY }}
  
permissions:
  id-token: write

jobs:
  promote:
    runs-on: ubuntu-latest

    steps:
      - name: Install Cloudsmith CLI
        run: pip install --upgrade cloudsmith-cli
        shell: bash
        
      - name: List cloudsmith packages
        run: cloudsmith list packages interview-prashant-lahare/staging
        shell: bash
        
      - name: Ensure correct package
        run: PACKAGE_QUERY="filename:${PACKAGE_NAME}-0.1.0.tar.gz"
        shell: bash
        
      - name: list all available packages
        run: cloudsmith list packages interview-prashant-lahare/staging -F json | jq '.data[].slug'
        shell: bash  
      
      - name: list all repos
        run: cloudsmith list repos interview-prashant-lahare
        shell: bash 
        
      - name: API key must have permission
        run: cloudsmith whoami --api-key 72dc5d23b33fae292be21583529f97005a4ad8d4
        shell: bash

      - name: Tag the synchronized package
        run: |
          PACKAGE_QUERY="${PACKAGE_NAME}-${{ github.event.client_payload.package_version }}.tar.gz"
          echo "Searching for package with query: $PACKAGE_QUERY"

          PACKAGE_DATA=$(cloudsmith list package ${{ env.CLOUDSMITH_NAMESPACE }}/${{ env.CLOUDSMITH_STAGING_REPO }} -q "$PACKAGE_QUERY" -F json || echo "{}")
          
          IDENTIFIER=$(echo "$PACKAGE_DATA" | jq -r '.data[0].identifier_perm // empty')

          if [ -z "$IDENTIFIER" ]; then
            echo "Failed to find package identifier"
            exit 1
          fi

          echo "Tagging package with 'ready-for-production'"
          cloudsmith tag add ${{ env.CLOUDSMITH_NAMESPACE }}/${{ env.CLOUDSMITH_STAGING_REPO }}/$IDENTIFIER ready-for-production
        shell: bash

      - name: Get package identifier and promote
        run: |
          # List all packages in the repository
          echo "Fetching all packages in staging repository..."
          PACKAGE_DATA=$(cloudsmith list packages interview-prashant-lahare/staging -F json || echo "{}")

          # Debug: Print the response to check package details
          echo "PACKAGE_DATA: $PACKAGE_DATA"

          # Extract identifier
          IDENTIFIER=$(echo "$PACKAGE_DATA" | jq -r '.data[0].identifier_perm // empty')

          # Check if identifier is empty
          if [ -z "$IDENTIFIER" ] || [ "$IDENTIFIER" == "empty" ]; then
            echo "No matching package found in staging!"
            exit 1
          fi

          echo "Found package identifier: $IDENTIFIER"

          # Promote package using the identifier
          cloudsmith mv --yes \
            interview-prashant-lahare/staging/$IDENTIFIER \
            interview-prashant-lahare/production-mVP7
        shell: bash
