name: Publish Python Package

on:
  workflow_run:
    workflows: ["Build Python Package"]
    types:
      - completed
env:
  CLOUDSMITH_NAMESPACE: "interview-prashant-lahare"  # Replace with your actual namespace
  CLOUDSMITH_REPOSITORY: "staging"
  CLOUDSMITH_API_KEY: "72dc5d23b33fae292be21583529f97005a4ad8d4"
  CLOUDSMITH_SERVICE_SLUG: ${{ vars.CLOUDSMITH_SERVICE_SLUG }}
  
permissions:
  contents: read
  actions: read

jobs:
  publish:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      # - name: Download artifact
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: python-package
      #     path: dist
      - name: Download artifact from previous workflow
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: build_package.yml
          name: python-package
          path: dist
          repo: ${{ github.repository }}
          github_token: ${{ secrets.GITHUB_TOKEN }}    

      - name: List directory contents
        run: ls -la dist/
        shell: bash
        
      - name: Install Cloudsmith CLI
        run: pip install --upgrade cloudsmith-cli
        shell: bash

      - name: Authenticate with Cloudsmith
        run: |
          export CLOUDSMITH_API_KEY=${{ secrets.CLOUDSMITH_API_KEY }}
        shell: bash

      - name: check namespace correct
        run: cloudsmith list repos interview-prashant-lahare
        shell: bash

      - name: check if api-key is missing
        run: cloudsmith push python interview-prashant-lahare/staging dist/*.tar.gz --api-key= --republish  
        shell: bash
        
      - name: Push package to Cloudsmith
        run: |
          if ! ls dist/*.tar.gz 1> /dev/null 2>&1; then
            echo "No package found to upload"
            exit 1
          fi
          echo "Uploading package to Cloudsmith..."
          cloudsmith push python ${{ env.CLOUDSMITH_NAMESPACE }}/${{ env.CLOUDSMITH_REPOSITORY }} dist/*.tar.gz --republish
        shell: bash

      # - name: Debug Cloudsmith Environment Variables
      #   run: |
      #     echo "CLOUDSMITH_NAMESPACE=${{ env.CLOUDSMITH_NAMESPACE }}"
      #     echo "CLOUDSMITH_REPOSITORY=${{ env.CLOUDSMITH_REPOSITORY }}"
      #     echo "CLOUDSMITH_API_KEY=${{ secrets.CLOUDSMITH_API_KEY }}"
      #   shell: bash

      # - name: Push package to Cloudsmith
      #   run: |
      #     if ! ls dist/*.tar.gz 1> /dev/null 2>&1; then
      #       echo "No package found to upload"
      #       exit 1
      #     fi
      #     echo "Uploading package to Cloudsmith..."
      #     cloudsmith push python \
      #       ${{ env.CLOUDSMITH_NAMESPACE }}/${{ env.CLOUDSMITH_REPOSITORY }} \
      #       dist/*.tar.gz --api-key=${{ secrets.CLOUDSMITH_API_KEY }} --republish
      #   shell: bash
